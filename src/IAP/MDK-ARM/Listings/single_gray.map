Component: ARM Compiler 5.05 update 1 (build 106) Tool: armlink [4d0efa]

==============================================================================

Section Cross References

    startup_cw32l010.o(RESET) refers to startup_cw32l010.o(STACK) for __initial_sp
    startup_cw32l010.o(RESET) refers to startup_cw32l010.o(.text) for Reset_Handler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.NMI_Handler) for NMI_Handler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.HardFault_Handler) for HardFault_Handler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.SVC_Handler) for SVC_Handler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.PendSV_Handler) for PendSV_Handler
    startup_cw32l010.o(RESET) refers to cw32l010_systick.o(i.SysTick_Handler) for SysTick_Handler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.WDT_IRQHandler) for WDT_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.LVD_IRQHandler) for LVD_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.RTC_IRQHandler) for RTC_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.FLASHRAM_IRQHandler) for FLASHRAM_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.SYSCTRL_IRQHandler) for SYSCTRL_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.GPIOA_IRQHandler) for GPIOA_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.GPIOB_IRQHandler) for GPIOB_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.ADC_IRQHandler) for ADC_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.ATIM_IRQHandler) for ATIM_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.VC1_IRQHandler) for VC1_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.VC2_IRQHandler) for VC2_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.GTIM1_IRQHandler) for GTIM1_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.LPTIM_IRQHandler) for LPTIM_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.BTIM1_IRQHandler) for BTIM1_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.BTIM2_IRQHandler) for BTIM2_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.BTIM3_IRQHandler) for BTIM3_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.I2C1_IRQHandler) for I2C1_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.UART2_IRQHandler) for UART2_IRQHandler
    startup_cw32l010.o(RESET) refers to interrupts_cw32l010.o(i.CLKFAULT_IRQHandler) for CLKFAULT_IRQHandler
    startup_cw32l010.o(.text) refers to system_cw32l010.o(i.SystemInit) for SystemInit
    startup_cw32l010.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_cw32l010.o(i.SystemCoreClockUpdate) refers to system_cw32l010.o(.data) for SystemCoreClock
    system_cw32l010.o(i.SystemInit) refers to system_cw32l010.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    cw32l010_sysctrl.o(i.SYSCTRL_AHBPeriphClk_Enable) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_AHBPeriphReset) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphClk_Enable1) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphClk_Enable2) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphReset1) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphReset2) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_CCS_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_ClearITPendingBit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_ClearRstFlag) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_GetHClkFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    cw32l010_sysctrl.o(i.SYSCTRL_GetHClkFreq) refers to cw32l010_sysctrl.o(.constdata) for hsiprs_tbl
    cw32l010_sysctrl.o(i.SYSCTRL_GetITStatus) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_GetPClkFreq) refers to cw32l010_sysctrl.o(i.SYSCTRL_GetHClkFreq) for SYSCTRL_GetHClkFreq
    cw32l010_sysctrl.o(i.SYSCTRL_GetRstFlag) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_GetStableFlag) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_HCLKPRS_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_HSE_Enable) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_HSE_Enable) refers to ldiv.o(.text) for __aeabi_ldivmod
    cw32l010_sysctrl.o(i.SYSCTRL_HSI_Enable) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_ITConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_LOCKUP_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_LSELOCK_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_LSE_Enable) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_MCO_OUT) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_PCLKPRS_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_SWDIO_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_SYSCLKSRC_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_SYSCLKSRC_Config) refers to cw32l010_sysctrl.o(i.SYSCTRL_GetHClkFreq) for SYSCTRL_GetHClkFreq
    cw32l010_sysctrl.o(i.SYSCTRL_SYSCLKSRC_Config) refers to cw32l010_sysctrl.o(i.SYSCTRL_SystemCoreClockUpdate) for SYSCTRL_SystemCoreClockUpdate
    cw32l010_sysctrl.o(i.SYSCTRL_SysClk_Switch) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_sysctrl.o(i.SYSCTRL_SysClk_Switch) refers to cw32l010_sysctrl.o(i.SYSCTRL_GetHClkFreq) for SYSCTRL_GetHClkFreq
    cw32l010_sysctrl.o(i.SYSCTRL_SysClk_Switch) refers to cw32l010_sysctrl.o(i.SYSCTRL_SystemCoreClockUpdate) for SYSCTRL_SystemCoreClockUpdate
    cw32l010_sysctrl.o(i.SYSCTRL_SystemCoreClockUpdate) refers to system_cw32l010.o(.data) for SystemCoreClock
    cw32l010_sysctrl.o(i.SYSCTRL_WAKEUPCLK_Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_flash.o(i.FLASH_ClearITPendingBit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_flash.o(i.FLASH_GetITStatus) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_flash.o(i.FLASH_ITConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_flash.o(i.FLASH_LockPage) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_flash.o(i.FLASH_SetLatency) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_flash.o(i.FLASH_SetReadOutLevel) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_flash.o(i.FLASH_SetReadOutLevel) refers to cw32l010_flash.o(i.FLASH_GetReadOutLevel) for FLASH_GetReadOutLevel
    cw32l010_flash.o(i.FLASH_UnlockPage) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_systick.o(i.GetTick) refers to cw32l010_systick.o(.data) for uwTick
    cw32l010_systick.o(i.InitTick) refers to uidiv.o(.text) for __aeabi_uidivmod
    cw32l010_systick.o(i.InitTick) refers to cw32l010_systick.o(i.__NVIC_SetPriority) for __NVIC_SetPriority
    cw32l010_systick.o(i.InitTick) refers to cw32l010_systick.o(.data) for uwTickFreq
    cw32l010_systick.o(i.SysTickDelay) refers to cw32l010_systick.o(i.GetTick) for GetTick
    cw32l010_systick.o(i.SysTick_Handler) refers to cw32l010_systick.o(.data) for uwTick
    cw32l010_uart.o(i.UART_ClearFlag) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_ClearITPendingBit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_ClockInit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_DMACmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_DirectionModeCmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_GetCounter) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_GetFlagStatus) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_GetITStatus) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_HalfDuplexCmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_ITConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_Init) refers to ffltui.o(.text) for __aeabi_ui2f
    cw32l010_uart.o(i.UART_Init) refers to fdiv.o(.text) for __aeabi_fdiv
    cw32l010_uart.o(i.UART_Init) refers to ffixui.o(.text) for __aeabi_f2uiz
    cw32l010_uart.o(i.UART_Init) refers to fadd.o(.text) for __aeabi_frsub
    cw32l010_uart.o(i.UART_Init) refers to fmul.o(.text) for __aeabi_fmul
    cw32l010_uart.o(i.UART_Init) refers to f2d.o(.text) for __aeabi_f2d
    cw32l010_uart.o(i.UART_Init) refers to dadd.o(.text) for __aeabi_dadd
    cw32l010_uart.o(i.UART_Init) refers to dfixui.o(.text) for __aeabi_d2uiz
    cw32l010_uart.o(i.UART_InvPinCmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_LINBreakDetectLengthConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_LINCmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_ReceiveData) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_ReceiveData_8bit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_SendData) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_SendData_8bit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_SendString) refers to cw32l010_uart.o(i.UART_SendData_8bit) for UART_SendData_8bit
    cw32l010_uart.o(i.UART_SendString) refers to cw32l010_uart.o(i.UART_GetFlagStatus) for UART_GetFlagStatus
    cw32l010_uart.o(i.UART_SetAutoReload) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_SetMultiMode) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_uart.o(i.UART_TimerModeConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_Brake1Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_Brake2Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_CH1Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_CH2Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_CH3Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_CH4Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_CH5Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_CH6Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_ClearITPendingBit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_CtrlPWMOutputs) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_GetITStatus) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_IC1Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_IC2Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_IC3Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_IC4Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_IC5Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_IC6Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_ITConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_MasterModeTrgo1Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_MasterModeTrgo2Config) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_OC1Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_OC2Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_OC3Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_OC4Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_OC5Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_OC6Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_RemapTimerInput) refers to cw32l010_atim.o(i.__ARM_common_switch8) for __ARM_common_switch8
    cw32l010_atim.o(i.ATIM_SetTriggerInput) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_SlaverModeConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_atim.o(i.ATIM_UpdateEventSelect) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_ClearITPendingBit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_GetCapture1) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_GetCapture2) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_GetCapture3) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_GetCapture4) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_GetITStatus) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC1Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC1ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC2Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC2ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC3Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC3ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC4Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_IC4ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_ITConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_MasterTRGOCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC1Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC1ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC2Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC2ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC3Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC3ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC4Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_OC4ModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_RemapUpdateFlag) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SetCompare1) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SetCompare2) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SetCompare3) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SetCompare4) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SetCounterValue) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SetPrescaler) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SetReloadValue) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_SlaverModeCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_gtim.o(i.GTIM_TimeBaseInit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_ClearITPendingBit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_ExtTrigCfg) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_GetConversionValue) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_GetITStatus) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_GetTs) refers to dfltui.o(.text) for __aeabi_ui2d
    cw32l010_adc.o(i.ADC_GetTs) refers to dmul.o(.text) for __aeabi_dmul
    cw32l010_adc.o(i.ADC_GetTs) refers to ffltui.o(.text) for __aeabi_ui2f
    cw32l010_adc.o(i.ADC_GetTs) refers to fmul.o(.text) for __aeabi_fmul
    cw32l010_adc.o(i.ADC_GetTs) refers to f2d.o(.text) for __aeabi_f2d
    cw32l010_adc.o(i.ADC_GetTs) refers to dadd.o(.text) for __aeabi_dsub
    cw32l010_adc.o(i.ADC_GetTs) refers to dflti.o(.text) for __aeabi_i2d
    cw32l010_adc.o(i.ADC_GetTs) refers to d2f.o(.text) for __aeabi_d2f
    cw32l010_adc.o(i.ADC_ITConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_SetTs) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_SoftwareStartConvCmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_WatchdogInit) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_adc.o(i.ADC_WatchdogInit) refers to cw32l010_adc.o(i.ADC_Init) for ADC_Init
    cw32l010_i2c.o(i.I2C1_SoftwareResetCmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_AcknowledgeConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_ClearIrq) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_Cmd) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_FilterConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_GcConfig) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_GenerateSTART) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_GenerateSTOP) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_GetIrq) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_GetState) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_ClearIrq) for I2C_ClearIrq
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_GenerateSTART) for I2C_GenerateSTART
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_GetIrq) for I2C_GetIrq
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_GetState) for I2C_GetState
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_Send7bitAddress) for I2C_Send7bitAddress
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_AcknowledgeConfig) for I2C_AcknowledgeConfig
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_ReceiveData) for I2C_ReceiveData
    cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave) refers to cw32l010_i2c.o(i.I2C_GenerateSTOP) for I2C_GenerateSTOP
    cw32l010_i2c.o(i.I2C_MasterSendDataToSlave) refers to cw32l010_i2c.o(i.I2C_ClearIrq) for I2C_ClearIrq
    cw32l010_i2c.o(i.I2C_MasterSendDataToSlave) refers to cw32l010_i2c.o(i.I2C_GenerateSTART) for I2C_GenerateSTART
    cw32l010_i2c.o(i.I2C_MasterSendDataToSlave) refers to cw32l010_i2c.o(i.I2C_GetIrq) for I2C_GetIrq
    cw32l010_i2c.o(i.I2C_MasterSendDataToSlave) refers to cw32l010_i2c.o(i.I2C_GetState) for I2C_GetState
    cw32l010_i2c.o(i.I2C_MasterSendDataToSlave) refers to cw32l010_i2c.o(i.I2C_Send7bitAddress) for I2C_Send7bitAddress
    cw32l010_i2c.o(i.I2C_MasterSendDataToSlave) refers to cw32l010_i2c.o(i.I2C_GenerateSTOP) for I2C_GenerateSTOP
    cw32l010_i2c.o(i.I2C_MasterSendDataToSlave) refers to cw32l010_i2c.o(i.I2C_SendData) for I2C_SendData
    cw32l010_i2c.o(i.I2C_Master_Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_Master_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    cw32l010_i2c.o(i.I2C_Master_Init) refers to cw32l010_i2c.o(i.I2C_SetBaud) for I2C_SetBaud
    cw32l010_i2c.o(i.I2C_Master_Init) refers to cw32l010_i2c.o(i.I2C_FilterConfig) for I2C_FilterConfig
    cw32l010_i2c.o(i.I2C_ReceiveData) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_Send7bitAddress) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_SendData) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_SetBaud) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress0) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress1) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress2) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_SlaveRecDataFromMaster) refers to cw32l010_i2c.o(i.I2C_AcknowledgeConfig) for I2C_AcknowledgeConfig
    cw32l010_i2c.o(i.I2C_SlaveRecDataFromMaster) refers to cw32l010_i2c.o(i.I2C_GetIrq) for I2C_GetIrq
    cw32l010_i2c.o(i.I2C_SlaveRecDataFromMaster) refers to cw32l010_i2c.o(i.I2C_GetState) for I2C_GetState
    cw32l010_i2c.o(i.I2C_SlaveRecDataFromMaster) refers to cw32l010_atim.o(i.__ARM_common_switch8) for __ARM_common_switch8
    cw32l010_i2c.o(i.I2C_SlaveRecDataFromMaster) refers to cw32l010_i2c.o(i.I2C_ReceiveData) for I2C_ReceiveData
    cw32l010_i2c.o(i.I2C_SlaveRecDataFromMaster) refers to cw32l010_i2c.o(i.I2C_ClearIrq) for I2C_ClearIrq
    cw32l010_i2c.o(i.I2C_SlaveSendDataToMaster) refers to cw32l010_i2c.o(i.I2C_AcknowledgeConfig) for I2C_AcknowledgeConfig
    cw32l010_i2c.o(i.I2C_SlaveSendDataToMaster) refers to cw32l010_i2c.o(i.I2C_GetIrq) for I2C_GetIrq
    cw32l010_i2c.o(i.I2C_SlaveSendDataToMaster) refers to cw32l010_i2c.o(i.I2C_GetState) for I2C_GetState
    cw32l010_i2c.o(i.I2C_SlaveSendDataToMaster) refers to cw32l010_i2c.o(i.I2C_SendData) for I2C_SendData
    cw32l010_i2c.o(i.I2C_SlaveSendDataToMaster) refers to cw32l010_i2c.o(i.I2C_ClearIrq) for I2C_ClearIrq
    cw32l010_i2c.o(i.I2C_Slave_Init) refers to main.o(i.assert_failed) for assert_failed
    cw32l010_i2c.o(i.I2C_Slave_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    cw32l010_i2c.o(i.I2C_Slave_Init) refers to cw32l010_i2c.o(i.I2C_FilterConfig) for I2C_FilterConfig
    cw32l010_i2c.o(i.I2C_Slave_Init) refers to cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress0) for I2C_SetOwnSlaveAddress0
    cw32l010_i2c.o(i.I2C_Slave_Init) refers to cw32l010_i2c.o(i.I2C_GcConfig) for I2C_GcConfig
    cw32l010_i2c.o(i.I2C_Slave_Init) refers to cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress1) for I2C_SetOwnSlaveAddress1
    cw32l010_i2c.o(i.I2C_Slave_Init) refers to cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress2) for I2C_SetOwnSlaveAddress2
    main.o(i.SystemClock_Config) refers to cw32l010_sysctrl.o(i.SYSCTRL_HSI_Enable) for SYSCTRL_HSI_Enable
    main.o(i.SystemClock_Config) refers to cw32l010_sysctrl.o(i.SYSCTRL_SysClk_Switch) for SYSCTRL_SysClk_Switch
    main.o(i.SystemClock_Config) refers to cw32l010_systick.o(i.InitTick) for InitTick
    main.o(i.SystemClock_Config) refers to cw32l010_sysctrl.o(i.SYSCTRL_SystemCoreClockUpdate) for SYSCTRL_SystemCoreClockUpdate
    main.o(i.SystemClock_Config) refers to cw32l010_flash.o(i.FLASH_SetLatency) for FLASH_SetLatency
    main.o(i.main) refers to gpio.o(i.MX_GPIO_Init) for MX_GPIO_Init
    main.o(i.main) refers to cw32l010_gpio.o(i.GPIO_ReadPin) for GPIO_ReadPin
    main.o(i.main) refers to main.o(i.SystemClock_Config) for SystemClock_Config
    main.o(i.main) refers to uart.o(i.MAX_UART1_Init) for MAX_UART1_Init
    main.o(i.main) refers to time.o(i.MAX_GTIME_Init) for MAX_GTIME_Init
    main.o(i.main) refers to control.o(i.setup) for setup
    main.o(i.main) refers to main.o(i.jump) for jump
    main.o(i.main) refers to control.o(i.loop) for loop
    uart.o(i.HAL_UART_Init) refers to uart.o(i.UART_MspInit) for UART_MspInit
    uart.o(i.HAL_UART_Init) refers to cw32l010_uart.o(i.UART_Init) for UART_Init
    uart.o(i.MAX_UART1_Init) refers to uart.o(i.HAL_UART_Init) for HAL_UART_Init
    uart.o(i.MAX_UART1_Init) refers to uart.o(.bss) for huart1
    uart.o(i.UART_MspInit) refers to cw32l010_sysctrl.o(i.SYSCTRL_AHBPeriphClk_Enable) for SYSCTRL_AHBPeriphClk_Enable
    uart.o(i.UART_MspInit) refers to cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphClk_Enable1) for SYSCTRL_APBPeriphClk_Enable1
    uart.o(i.UART_MspInit) refers to cw32l010_gpio.o(i.GPIO_WritePin) for GPIO_WritePin
    uart.o(i.UART_MspInit) refers to cw32l010_gpio.o(i.GPIO_Init) for GPIO_Init
    uart.o(i.UART_MspInit) refers to uart.o(.bss) for huart1
    uart.o(i.__write) refers to cw32l010_uart.o(i.UART_SendData_8bit) for UART_SendData_8bit
    uart.o(i.__write) refers to cw32l010_uart.o(i.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(i.fputc) refers to cw32l010_uart.o(i.UART_SendData_8bit) for UART_SendData_8bit
    uart.o(i.fputc) refers to cw32l010_uart.o(i.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(i.uart_receive_bytes) refers to cw32l010_systick.o(i.GetTick) for GetTick
    uart.o(i.uart_receive_bytes) refers to cw32l010_uart.o(i.UART_GetFlagStatus) for UART_GetFlagStatus
    uart.o(i.uart_receive_bytes) refers to cw32l010_uart.o(i.UART_ClearFlag) for UART_ClearFlag
    uart.o(i.uart_receive_bytes) refers to cw32l010_uart.o(i.UART_ReceiveData) for UART_ReceiveData
    uart.o(i.uart_send_bytes) refers to cw32l010_uart.o(i.UART_SendData_8bit) for UART_SendData_8bit
    uart.o(i.uart_send_bytes) refers to cw32l010_uart.o(i.UART_GetFlagStatus) for UART_GetFlagStatus
    time.o(i.HAL_TIME_GPIO_Init) refers to cw32l010_gpio.o(i.GPIO_Init) for GPIO_Init
    time.o(i.HAL_TIME_GPIO_Init) refers to time.o(.data) for gtime
    time.o(i.MAX_ATIME_Init) refers to memseta.o(.text) for __aeabi_memclr4
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_Init) for ATIM_Init
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_OC1Init) for ATIM_OC1Init
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_OC2Init) for ATIM_OC2Init
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_SetCompare1) for ATIM_SetCompare1
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_SetCompare2) for ATIM_SetCompare2
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_CH1Config) for ATIM_CH1Config
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_CH2Config) for ATIM_CH2Config
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_CtrlPWMOutputs) for ATIM_CtrlPWMOutputs
    time.o(i.MAX_ATIME_Init) refers to cw32l010_atim.o(i.ATIM_Cmd) for ATIM_Cmd
    time.o(i.MAX_ATIME_Init) refers to time.o(i.HAL_TIME_GPIO_Init) for HAL_TIME_GPIO_Init
    time.o(i.MAX_ATIME_Init) refers to time.o(.data) for atime
    time.o(i.MAX_GTIME_Init) refers to memseta.o(.text) for __aeabi_memclr4
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_TimeBaseInit) for GTIM_TimeBaseInit
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC4ModeCfg) for GTIM_OC4ModeCfg
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC3ModeCfg) for GTIM_OC3ModeCfg
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC2ModeCfg) for GTIM_OC2ModeCfg
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC1ModeCfg) for GTIM_OC1ModeCfg
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_SetCompare4) for GTIM_SetCompare4
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_SetCompare3) for GTIM_SetCompare3
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_SetCompare2) for GTIM_SetCompare2
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_SetCompare1) for GTIM_SetCompare1
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC4Cmd) for GTIM_OC4Cmd
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC3Cmd) for GTIM_OC3Cmd
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC2Cmd) for GTIM_OC2Cmd
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_OC1Cmd) for GTIM_OC1Cmd
    time.o(i.MAX_GTIME_Init) refers to cw32l010_gtim.o(i.GTIM_Cmd) for GTIM_Cmd
    time.o(i.MAX_GTIME_Init) refers to time.o(i.HAL_TIME_GPIO_Init) for HAL_TIME_GPIO_Init
    time.o(i.MAX_GTIME_Init) refers to time.o(.data) for gtime
    gpio.o(i.MX_GPIO_Init) refers to cw32l010_gpio.o(i.GPIO_Init) for GPIO_Init
    flash.o(i.HAL_Flash_Read) refers to flash.o(.bss) for flash_buffer
    flash.o(i.HAL_Flash_Sync) refers to cw32l010_flash.o(i.FLASH_UnlockPages) for FLASH_UnlockPages
    flash.o(i.HAL_Flash_Sync) refers to cw32l010_flash.o(i.FLASH_ErasePages) for FLASH_ErasePages
    flash.o(i.HAL_Flash_Sync) refers to cw32l010_flash.o(i.FLASH_LockAllPages) for FLASH_LockAllPages
    flash.o(i.HAL_Flash_Sync) refers to cw32l010_systick.o(i.SysTickDelay) for SysTickDelay
    flash.o(i.HAL_Flash_Sync) refers to cw32l010_flash.o(i.FLASH_WriteBytes) for FLASH_WriteBytes
    flash.o(i.HAL_Flash_Sync) refers to flash.o(.bss) for flash_buffer
    flash.o(i.HAL_Flash_Write) refers to flash.o(.bss) for flash_buffer
    xmodem.o(i.get_data) refers to uart.o(i.uart_receive_bytes) for uart_receive_bytes
    xmodem.o(i.uUART_PutChar) refers to common.o(i.uart_send_byte) for uart_send_byte
    xmodem.o(i.uXMODEM_Process) refers to printfb.o(i.__0printf$bare) for __2printf
    xmodem.o(i.uXMODEM_Process) refers to xmodem.o(i.get_data) for get_data
    xmodem.o(i.uXMODEM_Process) refers to xmodem.o(i.uUART_PutChar) for uUART_PutChar
    xmodem.o(i.uXMODEM_Process) refers to xmodem.o(i.uCheckSum) for uCheckSum
    xmodem.o(i.uXMODEM_Process) refers to memcpya.o(.text) for __aeabi_memcpy
    xmodem.o(i.uXMODEM_Process) refers to light.o(i.set_light_brightness) for set_light_brightness
    xmodem.o(i.uXMODEM_Process) refers to cw32l010_flash.o(i.FLASH_UnlockPages) for FLASH_UnlockPages
    xmodem.o(i.uXMODEM_Process) refers to cw32l010_flash.o(i.FLASH_ErasePages) for FLASH_ErasePages
    xmodem.o(i.uXMODEM_Process) refers to cw32l010_flash.o(i.FLASH_LockAllPages) for FLASH_LockAllPages
    xmodem.o(i.uXMODEM_Process) refers to cw32l010_systick.o(i.SysTickDelay) for SysTickDelay
    xmodem.o(i.uXMODEM_Process) refers to cw32l010_flash.o(i.FLASH_WriteBytes) for FLASH_WriteBytes
    xmodem.o(i.uXMODEM_Process) refers to xmodem.o(.conststring) for .conststring
    xmodem.o(i.uXMODEM_Process) refers to xmodem.o(.data) for gXM_STATUS
    xmodem.o(i.uXMODEM_Process) refers to xmodem.o(.bss) for strXMODEM
    common.o(i.uart_recv_byte) refers to uart.o(i.uart_receive_bytes) for uart_receive_bytes
    common.o(i.uart_send_byte) refers to uart.o(i.uart_send_bytes) for uart_send_bytes
    control.o(i.enter_light_flash) refers to light.o(i.set_light_brightness) for set_light_brightness
    control.o(i.enter_light_flash) refers to cw32l010_systick.o(i.SysTickDelay) for SysTickDelay
    control.o(i.setup) refers to control.o(i.enter_light_flash) for enter_light_flash
    control.o(i.setup) refers to xmodem.o(i.uXMODEM_Process) for uXMODEM_Process
    light.o(i.set_light_brightness) refers to mymath.o(i.min) for min
    light.o(i.set_light_brightness) refers to mymath.o(i.max) for max
    light.o(i.set_light_brightness) refers to cw32l010_gtim.o(i.GTIM_SetCompare3) for GTIM_SetCompare3
    light.o(i.set_light_brightness) refers to cw32l010_gtim.o(i.GTIM_SetCompare2) for GTIM_SetCompare2
    light.o(i.set_light_brightness) refers to cw32l010_gtim.o(i.GTIM_SetCompare1) for GTIM_SetCompare1
    light.o(i.set_rgb_brightness) refers to mymath.o(i.min) for min
    light.o(i.set_rgb_brightness) refers to mymath.o(i.max) for max
    light.o(i.set_rgb_brightness) refers to cw32l010_atim.o(i.ATIM_SetCompare1) for ATIM_SetCompare1
    light.o(i.set_rgb_brightness) refers to cw32l010_atim.o(i.ATIM_SetCompare2) for ATIM_SetCompare2
    light.o(i.set_rgb_brightness) refers to cw32l010_gtim.o(i.GTIM_SetCompare4) for GTIM_SetCompare4
    mymath.o(i.lv_color_hsv_to_rgb) refers to uidiv.o(.text) for __aeabi_uidivmod
    mymath.o(i.lv_color_hsv_to_rgb) refers to idiv.o(.text) for __aeabi_idivmod
    mymath.o(i.lv_color_hsv_to_rgb) refers to cw32l010_atim.o(i.__ARM_common_switch8) for __ARM_common_switch8
    mymath.o(i.lv_color_rgb_to_hsv) refers to uidiv.o(.text) for __aeabi_uidivmod
    mymath.o(i.lv_color_rgb_to_hsv) refers to idiv.o(.text) for __aeabi_idivmod
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to uart.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to uart.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to uart.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to uart.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to uart.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to uart.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to uart.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to uart.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to uart.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to uart.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to uart.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to uart.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to uart.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to uart.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to uart.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to uart.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to uart.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to uart.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to uart.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to uart.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to uart.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to uart.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to uart.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to uart.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to uart.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to uart.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to uart.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to uart.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to uart.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to uart.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to uart.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to uart.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to uart.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to uart.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to uart.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to uart.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to uart.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to uart.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to uart.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to uart.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to uart.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to uart.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to uart.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to uart.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_cw32l010.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_cw32l010.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing startup_cw32l010.o(HEAP), (512 bytes).
    Removing system_cw32l010.o(.rev16_text), (4 bytes).
    Removing system_cw32l010.o(.revsh_text), (4 bytes).
    Removing system_cw32l010.o(i.FirmwareDelay), (18 bytes).
    Removing cw32l010_sysctrl.o(.rev16_text), (4 bytes).
    Removing cw32l010_sysctrl.o(.revsh_text), (4 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_AHBPeriphReset), (100 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphClk_Enable2), (108 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphReset1), (96 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphReset2), (96 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_CCS_Config), (112 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_ClearITPendingBit), (88 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_ClearRstFlag), (104 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_ConfigSleepOnExit), (36 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_DeInit), (156 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GetAllRstFlag), (12 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GetAllStableFlag), (12 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GetITStatus), (92 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GetPClkFreq), (32 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GetRstFlag), (112 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GetStableFlag), (100 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GotoDeepSleep), (24 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_GotoSleep), (24 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_HCLKPRS_Config), (112 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_HEXEnablePinPolSet), (84 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_HSEWaitClockSet), (20 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_HSE_Disable), (28 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_HSE_Enable), (244 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_HSI_Disable), (28 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_ITConfig), (132 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_LOCKUP_Config), (88 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_LSELOCK_Config), (80 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_LSE_Disable), (28 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_LSE_Enable), (216 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_LSI_Disable), (28 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_LSI_Enable), (92 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_MCO_OUT), (208 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_PCLKPRS_Config), (112 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_PCLK_OUT), (72 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_SWDIO_Config), (88 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_SYSCLKSRC_Config), (104 bytes).
    Removing cw32l010_sysctrl.o(i.SYSCTRL_WAKEUPCLK_Config), (88 bytes).
    Removing cw32l010_gpio.o(.rev16_text), (4 bytes).
    Removing cw32l010_gpio.o(.revsh_text), (4 bytes).
    Removing cw32l010_gpio.o(i.GPIO_ConfigFilter), (8 bytes).
    Removing cw32l010_gpio.o(i.GPIO_DeInit), (38 bytes).
    Removing cw32l010_gpio.o(i.GPIO_GPIO2RST), (28 bytes).
    Removing cw32l010_gpio.o(i.GPIO_GPIO2SWD), (28 bytes).
    Removing cw32l010_gpio.o(i.GPIO_RST2GPIO), (24 bytes).
    Removing cw32l010_gpio.o(i.GPIO_SWD2GPIO), (24 bytes).
    Removing cw32l010_gpio.o(i.GPIO_TogglePin), (4 bytes).
    Removing cw32l010_gpio.o(i.GPIO_Write), (4 bytes).
    Removing cw32l010_flash.o(.rev16_text), (4 bytes).
    Removing cw32l010_flash.o(.revsh_text), (4 bytes).
    Removing cw32l010_flash.o(i.FLASH_ClearITPendingBit), (80 bytes).
    Removing cw32l010_flash.o(i.FLASH_ErasePage), (104 bytes).
    Removing cw32l010_flash.o(i.FLASH_GetITStatus), (84 bytes).
    Removing cw32l010_flash.o(i.FLASH_GetReadOutLevel), (16 bytes).
    Removing cw32l010_flash.o(i.FLASH_GetStatus), (60 bytes).
    Removing cw32l010_flash.o(i.FLASH_ITConfig), (116 bytes).
    Removing cw32l010_flash.o(i.FLASH_LockPage), (100 bytes).
    Removing cw32l010_flash.o(i.FLASH_LockPages), (92 bytes).
    Removing cw32l010_flash.o(i.FLASH_SetReadOutLevel), (112 bytes).
    Removing cw32l010_flash.o(i.FLASH_UnlockAllPages), (16 bytes).
    Removing cw32l010_flash.o(i.FLASH_UnlockPage), (100 bytes).
    Removing cw32l010_flash.o(i.FLASH_WriteHalfWords), (140 bytes).
    Removing cw32l010_flash.o(i.FLASH_WriteWords), (140 bytes).
    Removing cw32l010_systick.o(.rev16_text), (4 bytes).
    Removing cw32l010_systick.o(.revsh_text), (4 bytes).
    Removing cw32l010_systick.o(i.ResumeTick), (20 bytes).
    Removing cw32l010_systick.o(i.SuspendTick), (20 bytes).
    Removing cw32l010_uart.o(.rev16_text), (4 bytes).
    Removing cw32l010_uart.o(.revsh_text), (4 bytes).
    Removing cw32l010_uart.o(i.UART1_DeInit), (32 bytes).
    Removing cw32l010_uart.o(i.UART2_DeInit), (32 bytes).
    Removing cw32l010_uart.o(i.UART_ClearITPendingBit), (104 bytes).
    Removing cw32l010_uart.o(i.UART_ClockInit), (144 bytes).
    Removing cw32l010_uart.o(i.UART_ClockStructInit), (8 bytes).
    Removing cw32l010_uart.o(i.UART_DMACmd), (144 bytes).
    Removing cw32l010_uart.o(i.UART_DirectionModeCmd), (140 bytes).
    Removing cw32l010_uart.o(i.UART_GetCounter), (68 bytes).
    Removing cw32l010_uart.o(i.UART_GetITStatus), (112 bytes).
    Removing cw32l010_uart.o(i.UART_HalfDuplexCmd), (112 bytes).
    Removing cw32l010_uart.o(i.UART_ITConfig), (140 bytes).
    Removing cw32l010_uart.o(i.UART_InvPinCmd), (140 bytes).
    Removing cw32l010_uart.o(i.UART_LINBreakDetectLengthConfig), (108 bytes).
    Removing cw32l010_uart.o(i.UART_LINCmd), (108 bytes).
    Removing cw32l010_uart.o(i.UART_ReceiveData_8bit), (68 bytes).
    Removing cw32l010_uart.o(i.UART_SendData), (92 bytes).
    Removing cw32l010_uart.o(i.UART_SendString), (56 bytes).
    Removing cw32l010_uart.o(i.UART_SetAutoReload), (96 bytes).
    Removing cw32l010_uart.o(i.UART_SetMultiMode), (132 bytes).
    Removing cw32l010_uart.o(i.UART_StructInit), (28 bytes).
    Removing cw32l010_uart.o(i.UART_TimerModeConfig), (140 bytes).
    Removing cw32l010_atim.o(.rev16_text), (4 bytes).
    Removing cw32l010_atim.o(.revsh_text), (4 bytes).
    Removing cw32l010_atim.o(i.ATIM_Brake1Config), (140 bytes).
    Removing cw32l010_atim.o(i.ATIM_Brake2Config), (144 bytes).
    Removing cw32l010_atim.o(i.ATIM_CH1Config), (76 bytes).
    Removing cw32l010_atim.o(i.ATIM_CH2Config), (80 bytes).
    Removing cw32l010_atim.o(i.ATIM_CH3Config), (84 bytes).
    Removing cw32l010_atim.o(i.ATIM_CH4Config), (84 bytes).
    Removing cw32l010_atim.o(i.ATIM_CH5Config), (84 bytes).
    Removing cw32l010_atim.o(i.ATIM_CH6Config), (84 bytes).
    Removing cw32l010_atim.o(i.ATIM_ClearITPendingBit), (72 bytes).
    Removing cw32l010_atim.o(i.ATIM_Cmd), (24 bytes).
    Removing cw32l010_atim.o(i.ATIM_CtrlPWMOutputs), (84 bytes).
    Removing cw32l010_atim.o(i.ATIM_DeInit), (32 bytes).
    Removing cw32l010_atim.o(i.ATIM_GetCapture1), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_GetCapture2), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_GetCapture3), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_GetCapture4), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_GetCapture5), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_GetCapture6), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_GetITStatus), (80 bytes).
    Removing cw32l010_atim.o(i.ATIM_IC1Init), (220 bytes).
    Removing cw32l010_atim.o(i.ATIM_IC2Init), (216 bytes).
    Removing cw32l010_atim.o(i.ATIM_IC3Init), (208 bytes).
    Removing cw32l010_atim.o(i.ATIM_IC4Init), (220 bytes).
    Removing cw32l010_atim.o(i.ATIM_IC5Init), (216 bytes).
    Removing cw32l010_atim.o(i.ATIM_IC6Init), (228 bytes).
    Removing cw32l010_atim.o(i.ATIM_ITConfig), (112 bytes).
    Removing cw32l010_atim.o(i.ATIM_Init), (204 bytes).
    Removing cw32l010_atim.o(i.ATIM_MasterModeTrgo1Config), (100 bytes).
    Removing cw32l010_atim.o(i.ATIM_MasterModeTrgo2Config), (76 bytes).
    Removing cw32l010_atim.o(i.ATIM_OC1Init), (312 bytes).
    Removing cw32l010_atim.o(i.ATIM_OC2Init), (332 bytes).
    Removing cw32l010_atim.o(i.ATIM_OC3Init), (324 bytes).
    Removing cw32l010_atim.o(i.ATIM_OC4Init), (332 bytes).
    Removing cw32l010_atim.o(i.ATIM_OC5Init), (332 bytes).
    Removing cw32l010_atim.o(i.ATIM_OC6Init), (340 bytes).
    Removing cw32l010_atim.o(i.ATIM_RemapTimerInput), (172 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetCompare1), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetCompare2), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetCompare3), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetCompare4), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetCompare5), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetCompare6), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetCounterValue), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetPWMDeadtime), (116 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetReloadValue), (12 bytes).
    Removing cw32l010_atim.o(i.ATIM_SetTriggerInput), (172 bytes).
    Removing cw32l010_atim.o(i.ATIM_SlaverModeConfig), (96 bytes).
    Removing cw32l010_atim.o(i.ATIM_UpdateEventSelect), (80 bytes).
    Removing cw32l010_gtim.o(.rev16_text), (4 bytes).
    Removing cw32l010_gtim.o(.revsh_text), (4 bytes).
    Removing cw32l010_gtim.o(i.GTIM1_DeInit), (32 bytes).
    Removing cw32l010_gtim.o(i.GTIM_ClearITPendingBit), (92 bytes).
    Removing cw32l010_gtim.o(i.GTIM_GetCapture1), (64 bytes).
    Removing cw32l010_gtim.o(i.GTIM_GetCapture2), (64 bytes).
    Removing cw32l010_gtim.o(i.GTIM_GetCapture3), (64 bytes).
    Removing cw32l010_gtim.o(i.GTIM_GetCapture4), (64 bytes).
    Removing cw32l010_gtim.o(i.GTIM_GetITStatus), (136 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC1Cmd), (92 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC1ModeCfg), (268 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC2Cmd), (96 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC2ModeCfg), (284 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC3Cmd), (100 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC3ModeCfg), (284 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC4Cmd), (100 bytes).
    Removing cw32l010_gtim.o(i.GTIM_IC4ModeCfg), (296 bytes).
    Removing cw32l010_gtim.o(i.GTIM_ITConfig), (128 bytes).
    Removing cw32l010_gtim.o(i.GTIM_MasterTRGOCfg), (100 bytes).
    Removing cw32l010_gtim.o(i.GTIM_RemapUpdateFlag), (100 bytes).
    Removing cw32l010_gtim.o(i.GTIM_SetCounterValue), (64 bytes).
    Removing cw32l010_gtim.o(i.GTIM_SetPrescaler), (84 bytes).
    Removing cw32l010_gtim.o(i.GTIM_SetReloadValue), (64 bytes).
    Removing cw32l010_gtim.o(i.GTIM_SlaverModeCfg), (264 bytes).
    Removing cw32l010_adc.o(.rev16_text), (4 bytes).
    Removing cw32l010_adc.o(.revsh_text), (4 bytes).
    Removing cw32l010_adc.o(i.ADC_ClearITPendingAll), (12 bytes).
    Removing cw32l010_adc.o(i.ADC_ClearITPendingBit), (76 bytes).
    Removing cw32l010_adc.o(i.ADC_DeInit), (32 bytes).
    Removing cw32l010_adc.o(i.ADC_Disable), (18 bytes).
    Removing cw32l010_adc.o(i.ADC_Enable), (18 bytes).
    Removing cw32l010_adc.o(i.ADC_ExtTrigCfg), (116 bytes).
    Removing cw32l010_adc.o(i.ADC_GetConversionValue), (64 bytes).
    Removing cw32l010_adc.o(i.ADC_GetITStatus), (80 bytes).
    Removing cw32l010_adc.o(i.ADC_GetITStatusAll), (12 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr0Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr1Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr2Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr3Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr4Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr5Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr6Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetSqr7Result), (20 bytes).
    Removing cw32l010_adc.o(i.ADC_GetTs), (132 bytes).
    Removing cw32l010_adc.o(i.ADC_ITConfig), (112 bytes).
    Removing cw32l010_adc.o(i.ADC_Init), (504 bytes).
    Removing cw32l010_adc.o(i.ADC_SetTs), (72 bytes).
    Removing cw32l010_adc.o(i.ADC_SoftwareStartConvCmd), (92 bytes).
    Removing cw32l010_adc.o(i.ADC_WatchdogInit), (232 bytes).
    Removing cw32l010_i2c.o(.rev16_text), (4 bytes).
    Removing cw32l010_i2c.o(.revsh_text), (4 bytes).
    Removing cw32l010_i2c.o(i.I2C1_DeInit), (44 bytes).
    Removing cw32l010_i2c.o(i.I2C1_SoftwareResetCmd), (92 bytes).
    Removing cw32l010_i2c.o(i.I2C_AcknowledgeConfig), (100 bytes).
    Removing cw32l010_i2c.o(i.I2C_ClearIrq), (64 bytes).
    Removing cw32l010_i2c.o(i.I2C_Cmd), (100 bytes).
    Removing cw32l010_i2c.o(i.I2C_DisableInt), (56 bytes).
    Removing cw32l010_i2c.o(i.I2C_EnableInt), (56 bytes).
    Removing cw32l010_i2c.o(i.I2C_FilterConfig), (100 bytes).
    Removing cw32l010_i2c.o(i.I2C_GcConfig), (100 bytes).
    Removing cw32l010_i2c.o(i.I2C_GenerateSTART), (104 bytes).
    Removing cw32l010_i2c.o(i.I2C_GenerateSTOP), (72 bytes).
    Removing cw32l010_i2c.o(i.I2C_GetIrq), (64 bytes).
    Removing cw32l010_i2c.o(i.I2C_GetState), (60 bytes).
    Removing cw32l010_i2c.o(i.I2C_MasterRecDataFromSlave), (298 bytes).
    Removing cw32l010_i2c.o(i.I2C_MasterSendDataToSlave), (242 bytes).
    Removing cw32l010_i2c.o(i.I2C_Master_Init), (156 bytes).
    Removing cw32l010_i2c.o(i.I2C_ReceiveData), (60 bytes).
    Removing cw32l010_i2c.o(i.I2C_Send7bitAddress), (96 bytes).
    Removing cw32l010_i2c.o(i.I2C_SendData), (60 bytes).
    Removing cw32l010_i2c.o(i.I2C_SetBaud), (76 bytes).
    Removing cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress0), (76 bytes).
    Removing cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress1), (76 bytes).
    Removing cw32l010_i2c.o(i.I2C_SetOwnSlaveAddress2), (76 bytes).
    Removing cw32l010_i2c.o(i.I2C_SlaveRecDataFromMaster), (140 bytes).
    Removing cw32l010_i2c.o(i.I2C_SlaveSendDataToMaster), (160 bytes).
    Removing cw32l010_i2c.o(i.I2C_Slave_Init), (124 bytes).
    Removing cw32l010_hal_gpio.o(.rev16_text), (4 bytes).
    Removing cw32l010_hal_gpio.o(.revsh_text), (4 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(i.__write), (60 bytes).
    Removing time.o(.rev16_text), (4 bytes).
    Removing time.o(.revsh_text), (4 bytes).
    Removing time.o(i.MAX_ATIME_Init), (168 bytes).
    Removing gpio.o(.rev16_text), (4 bytes).
    Removing gpio.o(.revsh_text), (4 bytes).
    Removing flash.o(.rev16_text), (4 bytes).
    Removing flash.o(.revsh_text), (4 bytes).
    Removing flash.o(i.HAL_Flash_Init), (2 bytes).
    Removing flash.o(i.HAL_Flash_Read), (40 bytes).
    Removing flash.o(i.HAL_Flash_Sync), (72 bytes).
    Removing flash.o(i.HAL_Flash_Write), (32 bytes).
    Removing flash.o(.bss), (1300 bytes).
    Removing xmodem.o(.rev16_text), (4 bytes).
    Removing xmodem.o(.revsh_text), (4 bytes).
    Removing common.o(.rev16_text), (4 bytes).
    Removing common.o(.revsh_text), (4 bytes).
    Removing common.o(i.flash_erase), (6 bytes).
    Removing common.o(i.flash_write), (6 bytes).
    Removing common.o(i.uart_recv_byte), (18 bytes).
    Removing control.o(.rev16_text), (4 bytes).
    Removing control.o(.revsh_text), (4 bytes).
    Removing light.o(.rev16_text), (4 bytes).
    Removing light.o(.revsh_text), (4 bytes).
    Removing light.o(i.set_rgb_brightness), (120 bytes).
    Removing mymath.o(.rev16_text), (4 bytes).
    Removing mymath.o(.revsh_text), (4 bytes).
    Removing mymath.o(i.lv_color_hsv_to_rgb), (236 bytes).
    Removing mymath.o(i.lv_color_rgb_to_hsv), (278 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing dflti.o(.text), (40 bytes).
    Removing dfltui.o(.text), (28 bytes).
    Removing d2f.o(.text), (56 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing cw32l010_atim.o(i.__ARM_common_switch8), (28 bytes).

264 unused section(s) (total 23126 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_cw32l010.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixui.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  ffltui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\Core\Src\cw32l010_adc.c               0x00000000   Number         0  cw32l010_adc.o ABSOLUTE
    ..\Core\Src\cw32l010_atim.c              0x00000000   Number         0  cw32l010_atim.o ABSOLUTE
    ..\Core\Src\cw32l010_flash.c             0x00000000   Number         0  cw32l010_flash.o ABSOLUTE
    ..\Core\Src\cw32l010_gpio.c              0x00000000   Number         0  cw32l010_gpio.o ABSOLUTE
    ..\Core\Src\cw32l010_gtim.c              0x00000000   Number         0  cw32l010_gtim.o ABSOLUTE
    ..\Core\Src\cw32l010_i2c.c               0x00000000   Number         0  cw32l010_i2c.o ABSOLUTE
    ..\Core\Src\cw32l010_sysctrl.c           0x00000000   Number         0  cw32l010_sysctrl.o ABSOLUTE
    ..\Core\Src\cw32l010_systick.c           0x00000000   Number         0  cw32l010_systick.o ABSOLUTE
    ..\Core\Src\cw32l010_uart.c              0x00000000   Number         0  cw32l010_uart.o ABSOLUTE
    ..\Core\Src\system_cw32l010.c            0x00000000   Number         0  system_cw32l010.o ABSOLUTE
    ..\Drivers\CW32L010_HAL_Driver\Src\cw32l010_hal_gpio.c 0x00000000   Number         0  cw32l010_hal_gpio.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_adc.c            0x00000000   Number         0  cw32l010_adc.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_atim.c           0x00000000   Number         0  cw32l010_atim.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_flash.c          0x00000000   Number         0  cw32l010_flash.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_gpio.c           0x00000000   Number         0  cw32l010_gpio.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_gtim.c           0x00000000   Number         0  cw32l010_gtim.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_i2c.c            0x00000000   Number         0  cw32l010_i2c.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_sysctrl.c        0x00000000   Number         0  cw32l010_sysctrl.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_systick.c        0x00000000   Number         0  cw32l010_systick.o ABSOLUTE
    ..\\Core\\Src\\cw32l010_uart.c           0x00000000   Number         0  cw32l010_uart.o ABSOLUTE
    ..\\Core\\Src\\system_cw32l010.c         0x00000000   Number         0  system_cw32l010.o ABSOLUTE
    ..\\Drivers\\CW32L010_HAL_Driver\\Src\\cw32l010_hal_gpio.c 0x00000000   Number         0  cw32l010_hal_gpio.o ABSOLUTE
    Control\Src\control.c                    0x00000000   Number         0  control.o ABSOLUTE
    Control\Src\light.c                      0x00000000   Number         0  light.o ABSOLUTE
    Control\Src\myMath.c                     0x00000000   Number         0  mymath.o ABSOLUTE
    Control\\Src\\control.c                  0x00000000   Number         0  control.o ABSOLUTE
    Control\\Src\\light.c                    0x00000000   Number         0  light.o ABSOLUTE
    Control\\Src\\myMath.c                   0x00000000   Number         0  mymath.o ABSOLUTE
    IAP_xmodem\\common.c                     0x00000000   Number         0  common.o ABSOLUTE
    IAP_xmodem\\xmodem.c                     0x00000000   Number         0  xmodem.o ABSOLUTE
    IAP_xmodem\common.c                      0x00000000   Number         0  common.o ABSOLUTE
    IAP_xmodem\xmodem.c                      0x00000000   Number         0  xmodem.o ABSOLUTE
    User\Src\flash.c                         0x00000000   Number         0  flash.o ABSOLUTE
    User\Src\gpio.c                          0x00000000   Number         0  gpio.o ABSOLUTE
    User\Src\interrupts_cw32l010.c           0x00000000   Number         0  interrupts_cw32l010.o ABSOLUTE
    User\Src\main.c                          0x00000000   Number         0  main.o ABSOLUTE
    User\Src\time.c                          0x00000000   Number         0  time.o ABSOLUTE
    User\Src\uart.c                          0x00000000   Number         0  uart.o ABSOLUTE
    User\\Src\\flash.c                       0x00000000   Number         0  flash.o ABSOLUTE
    User\\Src\\gpio.c                        0x00000000   Number         0  gpio.o ABSOLUTE
    User\\Src\\main.c                        0x00000000   Number         0  main.o ABSOLUTE
    User\\Src\\time.c                        0x00000000   Number         0  time.o ABSOLUTE
    User\\Src\\uart.c                        0x00000000   Number         0  uart.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    startup_cw32l010.s                       0x00000000   Number         0  startup_cw32l010.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000d4   Section       40  startup_cw32l010.o(.text)
    .text                                    0x000000fc   Section        0  uidiv.o(.text)
    .text                                    0x00000128   Section        0  memcpya.o(.text)
    .text                                    0x0000014c   Section        0  memseta.o(.text)
    .text                                    0x00000170   Section        0  fadd.o(.text)
    .text                                    0x00000222   Section        0  fmul.o(.text)
    .text                                    0x0000029c   Section        0  fdiv.o(.text)
    .text                                    0x00000318   Section        0  dadd.o(.text)
    .text                                    0x0000047c   Section        0  ffltui.o(.text)
    .text                                    0x0000048a   Section        0  ffixui.o(.text)
    .text                                    0x000004b4   Section        0  dfixui.o(.text)
    .text                                    0x000004f0   Section        0  f2d.o(.text)
    .text                                    0x00000518   Section        0  llshl.o(.text)
    .text                                    0x00000538   Section        0  llushr.o(.text)
    .text                                    0x0000055a   Section        0  llsshr.o(.text)
    .text                                    0x00000580   Section        0  fepilogue.o(.text)
    .text                                    0x00000580   Section        0  iusefp.o(.text)
    .text                                    0x00000602   Section        0  depilogue.o(.text)
    .text                                    0x000006c0   Section       36  init.o(.text)
    i.ADC_IRQHandler                         0x000006e4   Section        0  interrupts_cw32l010.o(i.ADC_IRQHandler)
    i.ATIM_IRQHandler                        0x000006e6   Section        0  interrupts_cw32l010.o(i.ATIM_IRQHandler)
    i.BTIM1_IRQHandler                       0x000006e8   Section        0  interrupts_cw32l010.o(i.BTIM1_IRQHandler)
    i.BTIM2_IRQHandler                       0x000006ea   Section        0  interrupts_cw32l010.o(i.BTIM2_IRQHandler)
    i.BTIM3_IRQHandler                       0x000006ec   Section        0  interrupts_cw32l010.o(i.BTIM3_IRQHandler)
    i.CLKFAULT_IRQHandler                    0x000006ee   Section        0  interrupts_cw32l010.o(i.CLKFAULT_IRQHandler)
    i.FLASHRAM_IRQHandler                    0x000006f0   Section        0  interrupts_cw32l010.o(i.FLASHRAM_IRQHandler)
    i.FLASH_ErasePages                       0x000006f4   Section        0  cw32l010_flash.o(i.FLASH_ErasePages)
    i.FLASH_LockAllPages                     0x00000764   Section        0  cw32l010_flash.o(i.FLASH_LockAllPages)
    i.FLASH_SetLatency                       0x00000774   Section        0  cw32l010_flash.o(i.FLASH_SetLatency)
    i.FLASH_UnlockPages                      0x000007d0   Section        0  cw32l010_flash.o(i.FLASH_UnlockPages)
    i.FLASH_WriteBytes                       0x0000082c   Section        0  cw32l010_flash.o(i.FLASH_WriteBytes)
    i.GPIOA_IRQHandler                       0x000008a0   Section        0  interrupts_cw32l010.o(i.GPIOA_IRQHandler)
    i.GPIOB_IRQHandler                       0x000008a2   Section        0  interrupts_cw32l010.o(i.GPIOB_IRQHandler)
    i.GPIO_Init                              0x000008a4   Section        0  cw32l010_gpio.o(i.GPIO_Init)
    i.GPIO_ReadPin                           0x0000097c   Section        0  cw32l010_gpio.o(i.GPIO_ReadPin)
    i.GPIO_WritePin                          0x0000098e   Section        0  cw32l010_gpio.o(i.GPIO_WritePin)
    i.GTIM1_IRQHandler                       0x0000099a   Section        0  interrupts_cw32l010.o(i.GTIM1_IRQHandler)
    i.GTIM_Cmd                               0x0000099c   Section        0  cw32l010_gtim.o(i.GTIM_Cmd)
    i.GTIM_OC1Cmd                            0x000009f8   Section        0  cw32l010_gtim.o(i.GTIM_OC1Cmd)
    i.GTIM_OC1ModeCfg                        0x00000a50   Section        0  cw32l010_gtim.o(i.GTIM_OC1ModeCfg)
    i.GTIM_OC2Cmd                            0x00000b50   Section        0  cw32l010_gtim.o(i.GTIM_OC2Cmd)
    i.GTIM_OC2ModeCfg                        0x00000bac   Section        0  cw32l010_gtim.o(i.GTIM_OC2ModeCfg)
    i.GTIM_OC3Cmd                            0x00000cb4   Section        0  cw32l010_gtim.o(i.GTIM_OC3Cmd)
    i.GTIM_OC3ModeCfg                        0x00000d14   Section        0  cw32l010_gtim.o(i.GTIM_OC3ModeCfg)
    i.GTIM_OC4Cmd                            0x00000e18   Section        0  cw32l010_gtim.o(i.GTIM_OC4Cmd)
    i.GTIM_OC4ModeCfg                        0x00000e78   Section        0  cw32l010_gtim.o(i.GTIM_OC4ModeCfg)
    i.GTIM_SetCompare1                       0x00000f84   Section        0  cw32l010_gtim.o(i.GTIM_SetCompare1)
    i.GTIM_SetCompare2                       0x00000fc4   Section        0  cw32l010_gtim.o(i.GTIM_SetCompare2)
    i.GTIM_SetCompare3                       0x00001004   Section        0  cw32l010_gtim.o(i.GTIM_SetCompare3)
    i.GTIM_SetCompare4                       0x00001040   Section        0  cw32l010_gtim.o(i.GTIM_SetCompare4)
    i.GTIM_TimeBaseInit                      0x00001080   Section        0  cw32l010_gtim.o(i.GTIM_TimeBaseInit)
    i.GetTick                                0x00001190   Section        0  cw32l010_systick.o(i.GetTick)
    i.HAL_TIME_GPIO_Init                     0x0000119c   Section        0  time.o(i.HAL_TIME_GPIO_Init)
    HAL_TIME_GPIO_Init                       0x0000119d   Thumb Code   328  time.o(i.HAL_TIME_GPIO_Init)
    i.HAL_UART_Init                          0x000012f8   Section        0  uart.o(i.HAL_UART_Init)
    HAL_UART_Init                            0x000012f9   Thumb Code    20  uart.o(i.HAL_UART_Init)
    i.HardFault_Handler                      0x0000130c   Section        0  interrupts_cw32l010.o(i.HardFault_Handler)
    i.I2C1_IRQHandler                        0x00001310   Section        0  interrupts_cw32l010.o(i.I2C1_IRQHandler)
    i.InitTick                               0x00001314   Section        0  cw32l010_systick.o(i.InitTick)
    i.LPTIM_IRQHandler                       0x00001380   Section        0  interrupts_cw32l010.o(i.LPTIM_IRQHandler)
    i.LVD_IRQHandler                         0x00001382   Section        0  interrupts_cw32l010.o(i.LVD_IRQHandler)
    i.MAX_GTIME_Init                         0x00001384   Section        0  time.o(i.MAX_GTIME_Init)
    i.MAX_UART1_Init                         0x00001474   Section        0  uart.o(i.MAX_UART1_Init)
    i.MX_GPIO_Init                           0x000014b0   Section        0  gpio.o(i.MX_GPIO_Init)
    i.NMI_Handler                            0x000014e8   Section        0  interrupts_cw32l010.o(i.NMI_Handler)
    i.PendSV_Handler                         0x000014ea   Section        0  interrupts_cw32l010.o(i.PendSV_Handler)
    i.RTC_IRQHandler                         0x000014ec   Section        0  interrupts_cw32l010.o(i.RTC_IRQHandler)
    i.SPI1_IRQHandler                        0x000014ee   Section        0  interrupts_cw32l010.o(i.SPI1_IRQHandler)
    i.SVC_Handler                            0x000014f0   Section        0  interrupts_cw32l010.o(i.SVC_Handler)
    i.SYSCTRL_AHBPeriphClk_Enable            0x000014f4   Section        0  cw32l010_sysctrl.o(i.SYSCTRL_AHBPeriphClk_Enable)
    i.SYSCTRL_APBPeriphClk_Enable1           0x00001564   Section        0  cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphClk_Enable1)
    i.SYSCTRL_GetHClkFreq                    0x000015d0   Section        0  cw32l010_sysctrl.o(i.SYSCTRL_GetHClkFreq)
    i.SYSCTRL_HSI_Enable                     0x00001650   Section        0  cw32l010_sysctrl.o(i.SYSCTRL_HSI_Enable)
    i.SYSCTRL_IRQHandler                     0x0000176c   Section        0  interrupts_cw32l010.o(i.SYSCTRL_IRQHandler)
    i.SYSCTRL_SysClk_Switch                  0x00001770   Section        0  cw32l010_sysctrl.o(i.SYSCTRL_SysClk_Switch)
    i.SYSCTRL_SystemCoreClockUpdate          0x00001884   Section        0  cw32l010_sysctrl.o(i.SYSCTRL_SystemCoreClockUpdate)
    i.SysTickDelay                           0x00001890   Section        0  cw32l010_systick.o(i.SysTickDelay)
    i.SysTick_Handler                        0x000018ac   Section        0  cw32l010_systick.o(i.SysTick_Handler)
    i.SystemClock_Config                     0x000018c4   Section        0  main.o(i.SystemClock_Config)
    SystemClock_Config                       0x000018c5   Thumb Code    90  main.o(i.SystemClock_Config)
    i.SystemCoreClockUpdate                  0x00001930   Section        0  system_cw32l010.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x00001940   Section        0  system_cw32l010.o(i.SystemInit)
    i.UART1_IRQHandler                       0x0000197c   Section        0  interrupts_cw32l010.o(i.UART1_IRQHandler)
    i.UART2_IRQHandler                       0x0000197e   Section        0  interrupts_cw32l010.o(i.UART2_IRQHandler)
    i.UART_ClearFlag                         0x00001980   Section        0  cw32l010_uart.o(i.UART_ClearFlag)
    i.UART_GetFlagStatus                     0x000019e8   Section        0  cw32l010_uart.o(i.UART_GetFlagStatus)
    i.UART_Init                              0x00001a50   Section        0  cw32l010_uart.o(i.UART_Init)
    i.UART_MspInit                           0x00001d7c   Section        0  uart.o(i.UART_MspInit)
    UART_MspInit                             0x00001d7d   Thumb Code   128  uart.o(i.UART_MspInit)
    i.UART_ReceiveData                       0x00001e04   Section        0  cw32l010_uart.o(i.UART_ReceiveData)
    i.UART_SendData_8bit                     0x00001e4c   Section        0  cw32l010_uart.o(i.UART_SendData_8bit)
    i.VC1_IRQHandler                         0x00001ea0   Section        0  interrupts_cw32l010.o(i.VC1_IRQHandler)
    i.VC2_IRQHandler                         0x00001ea2   Section        0  interrupts_cw32l010.o(i.VC2_IRQHandler)
    i.WDT_IRQHandler                         0x00001ea4   Section        0  interrupts_cw32l010.o(i.WDT_IRQHandler)
    i.__0printf$bare                         0x00001ea8   Section        0  printfb.o(i.__0printf$bare)
    i.__ARM_clz                              0x00001ebc   Section        0  depilogue.o(i.__ARM_clz)
    i.__NVIC_SetPriority                     0x00001eec   Section        0  cw32l010_systick.o(i.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x00001eed   Thumb Code   110  cw32l010_systick.o(i.__NVIC_SetPriority)
    i.__scatterload_copy                     0x00001f64   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00001f72   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00001f74   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00001f82   Section        0  printfb.o(i._printf_core)
    _printf_core                             0x00001f83   Thumb Code    30  printfb.o(i._printf_core)
    i.assert_failed                          0x00001fa0   Section        0  main.o(i.assert_failed)
    i.enter_light_flash                      0x00001fa2   Section        0  control.o(i.enter_light_flash)
    enter_light_flash                        0x00001fa3   Thumb Code    62  control.o(i.enter_light_flash)
    i.fputc                                  0x00001fe0   Section        0  uart.o(i.fputc)
    i.get_data                               0x00002004   Section        0  xmodem.o(i.get_data)
    get_data                                 0x00002005   Thumb Code    22  xmodem.o(i.get_data)
    i.jump                                   0x0000201c   Section        0  main.o(i.jump)
    jump                                     0x0000201d   Thumb Code    26  main.o(i.jump)
    i.loop                                   0x0000203c   Section        0  control.o(i.loop)
    i.main                                   0x0000203e   Section        0  main.o(i.main)
    i.max                                    0x00002070   Section        0  mymath.o(i.max)
    i.min                                    0x0000207e   Section        0  mymath.o(i.min)
    i.set_light_brightness                   0x0000208c   Section        0  light.o(i.set_light_brightness)
    i.setup                                  0x00002108   Section        0  control.o(i.setup)
    i.uCheckSum                              0x00002114   Section        0  xmodem.o(i.uCheckSum)
    uCheckSum                                0x00002115   Thumb Code    28  xmodem.o(i.uCheckSum)
    i.uUART_PutChar                          0x00002130   Section        0  xmodem.o(i.uUART_PutChar)
    uUART_PutChar                            0x00002131   Thumb Code    12  xmodem.o(i.uUART_PutChar)
    i.uXMODEM_Process                        0x0000213c   Section        0  xmodem.o(i.uXMODEM_Process)
    i.uart_receive_bytes                     0x00002434   Section        0  uart.o(i.uart_receive_bytes)
    i.uart_send_byte                         0x0000248c   Section        0  common.o(i.uart_send_byte)
    i.uart_send_bytes                        0x00002498   Section        0  uart.o(i.uart_send_bytes)
    .constdata                               0x000024c8   Section       64  cw32l010_sysctrl.o(.constdata)
    .conststring                             0x00002508   Section       67  xmodem.o(.conststring)
    .data                                    0x20000000   Section        4  system_cw32l010.o(.data)
    .data                                    0x20000004   Section        9  cw32l010_systick.o(.data)
    .data                                    0x20000010   Section        8  time.o(.data)
    .data                                    0x20000018   Section       16  xmodem.o(.data)
    gXM_BlockCount                           0x20000018   Data           1  xmodem.o(.data)
    gXM_STATUS                               0x20000019   Data           1  xmodem.o(.data)
    gFlash_User_Address                      0x2000001c   Data           4  xmodem.o(.data)
    gFlash_User_Count                        0x20000020   Data           4  xmodem.o(.data)
    gFlash_Count                             0x20000024   Data           4  xmodem.o(.data)
    .data                                    0x20000028   Section        4  stdout.o(.data)
    .bss                                     0x2000002c   Section       28  uart.o(.bss)
    .bss                                     0x20000048   Section      644  xmodem.o(.bss)
    strXMODEM                                0x20000048   Data         132  xmodem.o(.bss)
    Block_512                                0x200000cc   Data         512  xmodem.o(.bss)
    STACK                                    0x200002d0   Section      512  startup_cw32l010.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_cw32l010.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x000000c0   Data           0  startup_cw32l010.o(RESET)
    __Vectors_Size                           0x000000c0   Number         0  startup_cw32l010.o ABSOLUTE
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000d5   Thumb Code    14  startup_cw32l010.o(.text)
    __aeabi_uidiv                            0x000000fd   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000000fd   Thumb Code    44  uidiv.o(.text)
    __aeabi_memcpy                           0x00000129   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000129   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000129   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x0000014d   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0000014d   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0000014d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0000015b   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0000015b   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0000015b   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0000015f   Thumb Code    18  memseta.o(.text)
    __aeabi_fadd                             0x00000171   Thumb Code   162  fadd.o(.text)
    __aeabi_fsub                             0x00000213   Thumb Code     8  fadd.o(.text)
    __aeabi_frsub                            0x0000021b   Thumb Code     8  fadd.o(.text)
    __aeabi_fmul                             0x00000223   Thumb Code   122  fmul.o(.text)
    __aeabi_fdiv                             0x0000029d   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x00000319   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x00000461   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x0000046d   Thumb Code    12  dadd.o(.text)
    __aeabi_ui2f                             0x0000047d   Thumb Code    14  ffltui.o(.text)
    __aeabi_f2uiz                            0x0000048b   Thumb Code    40  ffixui.o(.text)
    __aeabi_d2uiz                            0x000004b5   Thumb Code    50  dfixui.o(.text)
    __aeabi_f2d                              0x000004f1   Thumb Code    40  f2d.o(.text)
    __aeabi_llsl                             0x00000519   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x00000519   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000539   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x00000539   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x0000055b   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x0000055b   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x00000581   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x00000581   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x00000591   Thumb Code   114  fepilogue.o(.text)
    _double_round                            0x00000603   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x0000061d   Thumb Code   164  depilogue.o(.text)
    __scatterload                            0x000006c1   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x000006c1   Thumb Code     0  init.o(.text)
    ADC_IRQHandler                           0x000006e5   Thumb Code     2  interrupts_cw32l010.o(i.ADC_IRQHandler)
    ATIM_IRQHandler                          0x000006e7   Thumb Code     2  interrupts_cw32l010.o(i.ATIM_IRQHandler)
    BTIM1_IRQHandler                         0x000006e9   Thumb Code     2  interrupts_cw32l010.o(i.BTIM1_IRQHandler)
    BTIM2_IRQHandler                         0x000006eb   Thumb Code     2  interrupts_cw32l010.o(i.BTIM2_IRQHandler)
    BTIM3_IRQHandler                         0x000006ed   Thumb Code     2  interrupts_cw32l010.o(i.BTIM3_IRQHandler)
    CLKFAULT_IRQHandler                      0x000006ef   Thumb Code     2  interrupts_cw32l010.o(i.CLKFAULT_IRQHandler)
    FLASHRAM_IRQHandler                      0x000006f1   Thumb Code     2  interrupts_cw32l010.o(i.FLASHRAM_IRQHandler)
    FLASH_ErasePages                         0x000006f5   Thumb Code   100  cw32l010_flash.o(i.FLASH_ErasePages)
    FLASH_LockAllPages                       0x00000765   Thumb Code     8  cw32l010_flash.o(i.FLASH_LockAllPages)
    FLASH_SetLatency                         0x00000775   Thumb Code    46  cw32l010_flash.o(i.FLASH_SetLatency)
    FLASH_UnlockPages                        0x000007d1   Thumb Code    80  cw32l010_flash.o(i.FLASH_UnlockPages)
    FLASH_WriteBytes                         0x0000082d   Thumb Code   102  cw32l010_flash.o(i.FLASH_WriteBytes)
    GPIOA_IRQHandler                         0x000008a1   Thumb Code     2  interrupts_cw32l010.o(i.GPIOA_IRQHandler)
    GPIOB_IRQHandler                         0x000008a3   Thumb Code     2  interrupts_cw32l010.o(i.GPIOB_IRQHandler)
    GPIO_Init                                0x000008a5   Thumb Code   206  cw32l010_gpio.o(i.GPIO_Init)
    GPIO_ReadPin                             0x0000097d   Thumb Code    18  cw32l010_gpio.o(i.GPIO_ReadPin)
    GPIO_WritePin                            0x0000098f   Thumb Code    12  cw32l010_gpio.o(i.GPIO_WritePin)
    GTIM1_IRQHandler                         0x0000099b   Thumb Code     2  interrupts_cw32l010.o(i.GTIM1_IRQHandler)
    GTIM_Cmd                                 0x0000099d   Thumb Code    60  cw32l010_gtim.o(i.GTIM_Cmd)
    GTIM_OC1Cmd                              0x000009f9   Thumb Code    56  cw32l010_gtim.o(i.GTIM_OC1Cmd)
    GTIM_OC1ModeCfg                          0x00000a51   Thumb Code   224  cw32l010_gtim.o(i.GTIM_OC1ModeCfg)
    GTIM_OC2Cmd                              0x00000b51   Thumb Code    58  cw32l010_gtim.o(i.GTIM_OC2Cmd)
    GTIM_OC2ModeCfg                          0x00000bad   Thumb Code   230  cw32l010_gtim.o(i.GTIM_OC2ModeCfg)
    GTIM_OC3Cmd                              0x00000cb5   Thumb Code    62  cw32l010_gtim.o(i.GTIM_OC3Cmd)
    GTIM_OC3ModeCfg                          0x00000d15   Thumb Code   228  cw32l010_gtim.o(i.GTIM_OC3ModeCfg)
    GTIM_OC4Cmd                              0x00000e19   Thumb Code    62  cw32l010_gtim.o(i.GTIM_OC4Cmd)
    GTIM_OC4ModeCfg                          0x00000e79   Thumb Code   234  cw32l010_gtim.o(i.GTIM_OC4ModeCfg)
    GTIM_SetCompare1                         0x00000f85   Thumb Code    26  cw32l010_gtim.o(i.GTIM_SetCompare1)
    GTIM_SetCompare2                         0x00000fc5   Thumb Code    26  cw32l010_gtim.o(i.GTIM_SetCompare2)
    GTIM_SetCompare3                         0x00001005   Thumb Code    28  cw32l010_gtim.o(i.GTIM_SetCompare3)
    GTIM_SetCompare4                         0x00001041   Thumb Code    26  cw32l010_gtim.o(i.GTIM_SetCompare4)
    GTIM_TimeBaseInit                        0x00001081   Thumb Code   234  cw32l010_gtim.o(i.GTIM_TimeBaseInit)
    GetTick                                  0x00001191   Thumb Code     6  cw32l010_systick.o(i.GetTick)
    HardFault_Handler                        0x0000130d   Thumb Code     4  interrupts_cw32l010.o(i.HardFault_Handler)
    I2C1_IRQHandler                          0x00001311   Thumb Code     2  interrupts_cw32l010.o(i.I2C1_IRQHandler)
    InitTick                                 0x00001315   Thumb Code    90  cw32l010_systick.o(i.InitTick)
    LPTIM_IRQHandler                         0x00001381   Thumb Code     2  interrupts_cw32l010.o(i.LPTIM_IRQHandler)
    LVD_IRQHandler                           0x00001383   Thumb Code     2  interrupts_cw32l010.o(i.LVD_IRQHandler)
    MAX_GTIME_Init                           0x00001385   Thumb Code   218  time.o(i.MAX_GTIME_Init)
    MAX_UART1_Init                           0x00001475   Thumb Code    46  uart.o(i.MAX_UART1_Init)
    MX_GPIO_Init                             0x000014b1   Thumb Code    46  gpio.o(i.MX_GPIO_Init)
    NMI_Handler                              0x000014e9   Thumb Code     2  interrupts_cw32l010.o(i.NMI_Handler)
    PendSV_Handler                           0x000014eb   Thumb Code     2  interrupts_cw32l010.o(i.PendSV_Handler)
    RTC_IRQHandler                           0x000014ed   Thumb Code     2  interrupts_cw32l010.o(i.RTC_IRQHandler)
    SPI1_IRQHandler                          0x000014ef   Thumb Code     2  interrupts_cw32l010.o(i.SPI1_IRQHandler)
    SVC_Handler                              0x000014f1   Thumb Code     2  interrupts_cw32l010.o(i.SVC_Handler)
    SYSCTRL_AHBPeriphClk_Enable              0x000014f5   Thumb Code    66  cw32l010_sysctrl.o(i.SYSCTRL_AHBPeriphClk_Enable)
    SYSCTRL_APBPeriphClk_Enable1             0x00001565   Thumb Code    64  cw32l010_sysctrl.o(i.SYSCTRL_APBPeriphClk_Enable1)
    SYSCTRL_GetHClkFreq                      0x000015d1   Thumb Code   108  cw32l010_sysctrl.o(i.SYSCTRL_GetHClkFreq)
    SYSCTRL_HSI_Enable                       0x00001651   Thumb Code   236  cw32l010_sysctrl.o(i.SYSCTRL_HSI_Enable)
    SYSCTRL_IRQHandler                       0x0000176d   Thumb Code     2  interrupts_cw32l010.o(i.SYSCTRL_IRQHandler)
    SYSCTRL_SysClk_Switch                    0x00001771   Thumb Code   232  cw32l010_sysctrl.o(i.SYSCTRL_SysClk_Switch)
    SYSCTRL_SystemCoreClockUpdate            0x00001885   Thumb Code     6  cw32l010_sysctrl.o(i.SYSCTRL_SystemCoreClockUpdate)
    SysTickDelay                             0x00001891   Thumb Code    26  cw32l010_systick.o(i.SysTickDelay)
    SysTick_Handler                          0x000018ad   Thumb Code    16  cw32l010_systick.o(i.SysTick_Handler)
    SystemCoreClockUpdate                    0x00001931   Thumb Code     8  system_cw32l010.o(i.SystemCoreClockUpdate)
    SystemInit                               0x00001941   Thumb Code    50  system_cw32l010.o(i.SystemInit)
    UART1_IRQHandler                         0x0000197d   Thumb Code     2  interrupts_cw32l010.o(i.UART1_IRQHandler)
    UART2_IRQHandler                         0x0000197f   Thumb Code     2  interrupts_cw32l010.o(i.UART2_IRQHandler)
    UART_ClearFlag                           0x00001981   Thumb Code    62  cw32l010_uart.o(i.UART_ClearFlag)
    UART_GetFlagStatus                       0x000019e9   Thumb Code    68  cw32l010_uart.o(i.UART_GetFlagStatus)
    UART_Init                                0x00001a51   Thumb Code   748  cw32l010_uart.o(i.UART_Init)
    UART_ReceiveData                         0x00001e05   Thumb Code    34  cw32l010_uart.o(i.UART_ReceiveData)
    UART_SendData_8bit                       0x00001e4d   Thumb Code    46  cw32l010_uart.o(i.UART_SendData_8bit)
    VC1_IRQHandler                           0x00001ea1   Thumb Code     2  interrupts_cw32l010.o(i.VC1_IRQHandler)
    VC2_IRQHandler                           0x00001ea3   Thumb Code     2  interrupts_cw32l010.o(i.VC2_IRQHandler)
    WDT_IRQHandler                           0x00001ea5   Thumb Code     2  interrupts_cw32l010.o(i.WDT_IRQHandler)
    __0printf$bare                           0x00001ea9   Thumb Code    12  printfb.o(i.__0printf$bare)
    __1printf$bare                           0x00001ea9   Thumb Code     0  printfb.o(i.__0printf$bare)
    __2printf                                0x00001ea9   Thumb Code     0  printfb.o(i.__0printf$bare)
    __ARM_clz                                0x00001ebd   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x00001f65   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00001f73   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00001f75   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    assert_failed                            0x00001fa1   Thumb Code     2  main.o(i.assert_failed)
    fputc                                    0x00001fe1   Thumb Code    32  uart.o(i.fputc)
    loop                                     0x0000203d   Thumb Code     2  control.o(i.loop)
    main                                     0x0000203f   Thumb Code    50  main.o(i.main)
    max                                      0x00002071   Thumb Code    14  mymath.o(i.max)
    min                                      0x0000207f   Thumb Code    14  mymath.o(i.min)
    set_light_brightness                     0x0000208d   Thumb Code   118  light.o(i.set_light_brightness)
    setup                                    0x00002109   Thumb Code    12  control.o(i.setup)
    uXMODEM_Process                          0x0000213d   Thumb Code   620  xmodem.o(i.uXMODEM_Process)
    uart_receive_bytes                       0x00002435   Thumb Code    84  uart.o(i.uart_receive_bytes)
    uart_send_byte                           0x0000248d   Thumb Code    12  common.o(i.uart_send_byte)
    uart_send_bytes                          0x00002499   Thumb Code    44  uart.o(i.uart_send_bytes)
    hsiprs_tbl                               0x000024c8   Data          64  cw32l010_sysctrl.o(.constdata)
    Region$$Table$$Base                      0x0000254c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000256c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_cw32l010.o(.data)
    uwTick                                   0x20000004   Data           4  cw32l010_systick.o(.data)
    uwTickPrio                               0x20000008   Data           4  cw32l010_systick.o(.data)
    uwTickFreq                               0x2000000c   Data           1  cw32l010_systick.o(.data)
    gtime                                    0x20000010   Data           4  time.o(.data)
    atime                                    0x20000014   Data           4  time.o(.data)
    __stdout                                 0x20000028   Data           4  stdout.o(.data)
    huart1                                   0x2000002c   Data          28  uart.o(.bss)
    __initial_sp                             0x200004d0   Data           0  startup_cw32l010.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00002598, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x0000256c, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000c0   Data   RO            3    RESET               startup_cw32l010.o
    0x000000c0   0x000000c0   0x00000000   Code   RO         2256  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x000000c0   0x000000c0   0x00000004   Code   RO         2555    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x000000c4   0x000000c4   0x00000004   Code   RO         2558    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2560    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x000000c8   0x000000c8   0x00000000   Code   RO         2562    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x000000c8   0x000000c8   0x00000008   Code   RO         2563    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2565    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x000000d0   0x000000d0   0x00000000   Code   RO         2567    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         2556    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x000000d4   0x000000d4   0x00000028   Code   RO            4    .text               startup_cw32l010.o
    0x000000fc   0x000000fc   0x0000002c   Code   RO         2259    .text               mc_p.l(uidiv.o)
    0x00000128   0x00000128   0x00000024   Code   RO         2265    .text               mc_p.l(memcpya.o)
    0x0000014c   0x0000014c   0x00000024   Code   RO         2267    .text               mc_p.l(memseta.o)
    0x00000170   0x00000170   0x000000b2   Code   RO         2531    .text               mf_p.l(fadd.o)
    0x00000222   0x00000222   0x0000007a   Code   RO         2533    .text               mf_p.l(fmul.o)
    0x0000029c   0x0000029c   0x0000007c   Code   RO         2535    .text               mf_p.l(fdiv.o)
    0x00000318   0x00000318   0x00000164   Code   RO         2537    .text               mf_p.l(dadd.o)
    0x0000047c   0x0000047c   0x0000000e   Code   RO         2541    .text               mf_p.l(ffltui.o)
    0x0000048a   0x0000048a   0x00000028   Code   RO         2547    .text               mf_p.l(ffixui.o)
    0x000004b2   0x000004b2   0x00000002   PAD
    0x000004b4   0x000004b4   0x0000003c   Code   RO         2549    .text               mf_p.l(dfixui.o)
    0x000004f0   0x000004f0   0x00000028   Code   RO         2551    .text               mf_p.l(f2d.o)
    0x00000518   0x00000518   0x00000020   Code   RO         2572    .text               mc_p.l(llshl.o)
    0x00000538   0x00000538   0x00000022   Code   RO         2574    .text               mc_p.l(llushr.o)
    0x0000055a   0x0000055a   0x00000026   Code   RO         2576    .text               mc_p.l(llsshr.o)
    0x00000580   0x00000580   0x00000000   Code   RO         2578    .text               mc_p.l(iusefp.o)
    0x00000580   0x00000580   0x00000082   Code   RO         2579    .text               mf_p.l(fepilogue.o)
    0x00000602   0x00000602   0x000000be   Code   RO         2581    .text               mf_p.l(depilogue.o)
    0x000006c0   0x000006c0   0x00000024   Code   RO         2591    .text               mc_p.l(init.o)
    0x000006e4   0x000006e4   0x00000002   Code   RO         1702    i.ADC_IRQHandler    interrupts_cw32l010.o
    0x000006e6   0x000006e6   0x00000002   Code   RO         1703    i.ATIM_IRQHandler   interrupts_cw32l010.o
    0x000006e8   0x000006e8   0x00000002   Code   RO         1704    i.BTIM1_IRQHandler  interrupts_cw32l010.o
    0x000006ea   0x000006ea   0x00000002   Code   RO         1705    i.BTIM2_IRQHandler  interrupts_cw32l010.o
    0x000006ec   0x000006ec   0x00000002   Code   RO         1706    i.BTIM3_IRQHandler  interrupts_cw32l010.o
    0x000006ee   0x000006ee   0x00000002   Code   RO         1707    i.CLKFAULT_IRQHandler  interrupts_cw32l010.o
    0x000006f0   0x000006f0   0x00000002   Code   RO         1708    i.FLASHRAM_IRQHandler  interrupts_cw32l010.o
    0x000006f2   0x000006f2   0x00000002   PAD
    0x000006f4   0x000006f4   0x00000070   Code   RO          446    i.FLASH_ErasePages  cw32l010_flash.o
    0x00000764   0x00000764   0x00000010   Code   RO          451    i.FLASH_LockAllPages  cw32l010_flash.o
    0x00000774   0x00000774   0x0000005c   Code   RO          454    i.FLASH_SetLatency  cw32l010_flash.o
    0x000007d0   0x000007d0   0x0000005c   Code   RO          458    i.FLASH_UnlockPages  cw32l010_flash.o
    0x0000082c   0x0000082c   0x00000074   Code   RO          459    i.FLASH_WriteBytes  cw32l010_flash.o
    0x000008a0   0x000008a0   0x00000002   Code   RO         1709    i.GPIOA_IRQHandler  interrupts_cw32l010.o
    0x000008a2   0x000008a2   0x00000002   Code   RO         1710    i.GPIOB_IRQHandler  interrupts_cw32l010.o
    0x000008a4   0x000008a4   0x000000d8   Code   RO          365    i.GPIO_Init         cw32l010_gpio.o
    0x0000097c   0x0000097c   0x00000012   Code   RO          367    i.GPIO_ReadPin      cw32l010_gpio.o
    0x0000098e   0x0000098e   0x0000000c   Code   RO          371    i.GPIO_WritePin     cw32l010_gpio.o
    0x0000099a   0x0000099a   0x00000002   Code   RO         1711    i.GTIM1_IRQHandler  interrupts_cw32l010.o
    0x0000099c   0x0000099c   0x0000005c   Code   RO         1115    i.GTIM_Cmd          cw32l010_gtim.o
    0x000009f8   0x000009f8   0x00000058   Code   RO         1131    i.GTIM_OC1Cmd       cw32l010_gtim.o
    0x00000a50   0x00000a50   0x00000100   Code   RO         1132    i.GTIM_OC1ModeCfg   cw32l010_gtim.o
    0x00000b50   0x00000b50   0x0000005c   Code   RO         1133    i.GTIM_OC2Cmd       cw32l010_gtim.o
    0x00000bac   0x00000bac   0x00000108   Code   RO         1134    i.GTIM_OC2ModeCfg   cw32l010_gtim.o
    0x00000cb4   0x00000cb4   0x00000060   Code   RO         1135    i.GTIM_OC3Cmd       cw32l010_gtim.o
    0x00000d14   0x00000d14   0x00000104   Code   RO         1136    i.GTIM_OC3ModeCfg   cw32l010_gtim.o
    0x00000e18   0x00000e18   0x00000060   Code   RO         1137    i.GTIM_OC4Cmd       cw32l010_gtim.o
    0x00000e78   0x00000e78   0x0000010c   Code   RO         1138    i.GTIM_OC4ModeCfg   cw32l010_gtim.o
    0x00000f84   0x00000f84   0x00000040   Code   RO         1140    i.GTIM_SetCompare1  cw32l010_gtim.o
    0x00000fc4   0x00000fc4   0x00000040   Code   RO         1141    i.GTIM_SetCompare2  cw32l010_gtim.o
    0x00001004   0x00001004   0x0000003c   Code   RO         1142    i.GTIM_SetCompare3  cw32l010_gtim.o
    0x00001040   0x00001040   0x00000040   Code   RO         1143    i.GTIM_SetCompare4  cw32l010_gtim.o
    0x00001080   0x00001080   0x00000110   Code   RO         1148    i.GTIM_TimeBaseInit  cw32l010_gtim.o
    0x00001190   0x00001190   0x0000000c   Code   RO          569    i.GetTick           cw32l010_systick.o
    0x0000119c   0x0000119c   0x0000015c   Code   RO         1977    i.HAL_TIME_GPIO_Init  time.o
    0x000012f8   0x000012f8   0x00000014   Code   RO         1920    i.HAL_UART_Init     uart.o
    0x0000130c   0x0000130c   0x00000004   Code   RO         1712    i.HardFault_Handler  interrupts_cw32l010.o
    0x00001310   0x00001310   0x00000002   Code   RO         1713    i.I2C1_IRQHandler   interrupts_cw32l010.o
    0x00001312   0x00001312   0x00000002   PAD
    0x00001314   0x00001314   0x0000006c   Code   RO          570    i.InitTick          cw32l010_systick.o
    0x00001380   0x00001380   0x00000002   Code   RO         1714    i.LPTIM_IRQHandler  interrupts_cw32l010.o
    0x00001382   0x00001382   0x00000002   Code   RO         1715    i.LVD_IRQHandler    interrupts_cw32l010.o
    0x00001384   0x00001384   0x000000f0   Code   RO         1979    i.MAX_GTIME_Init    time.o
    0x00001474   0x00001474   0x0000003c   Code   RO         1921    i.MAX_UART1_Init    uart.o
    0x000014b0   0x000014b0   0x00000038   Code   RO         2011    i.MX_GPIO_Init      gpio.o
    0x000014e8   0x000014e8   0x00000002   Code   RO         1716    i.NMI_Handler       interrupts_cw32l010.o
    0x000014ea   0x000014ea   0x00000002   Code   RO         1717    i.PendSV_Handler    interrupts_cw32l010.o
    0x000014ec   0x000014ec   0x00000002   Code   RO         1718    i.RTC_IRQHandler    interrupts_cw32l010.o
    0x000014ee   0x000014ee   0x00000002   Code   RO         1719    i.SPI1_IRQHandler   interrupts_cw32l010.o
    0x000014f0   0x000014f0   0x00000002   Code   RO         1720    i.SVC_Handler       interrupts_cw32l010.o
    0x000014f2   0x000014f2   0x00000002   PAD
    0x000014f4   0x000014f4   0x00000070   Code   RO           85    i.SYSCTRL_AHBPeriphClk_Enable  cw32l010_sysctrl.o
    0x00001564   0x00001564   0x0000006c   Code   RO           87    i.SYSCTRL_APBPeriphClk_Enable1  cw32l010_sysctrl.o
    0x000015d0   0x000015d0   0x00000080   Code   RO           98    i.SYSCTRL_GetHClkFreq  cw32l010_sysctrl.o
    0x00001650   0x00001650   0x0000011c   Code   RO          111    i.SYSCTRL_HSI_Enable  cw32l010_sysctrl.o
    0x0000176c   0x0000176c   0x00000002   Code   RO         1721    i.SYSCTRL_IRQHandler  interrupts_cw32l010.o
    0x0000176e   0x0000176e   0x00000002   PAD
    0x00001770   0x00001770   0x00000114   Code   RO          124    i.SYSCTRL_SysClk_Switch  cw32l010_sysctrl.o
    0x00001884   0x00001884   0x0000000c   Code   RO          125    i.SYSCTRL_SystemCoreClockUpdate  cw32l010_sysctrl.o
    0x00001890   0x00001890   0x0000001a   Code   RO          573    i.SysTickDelay      cw32l010_systick.o
    0x000018aa   0x000018aa   0x00000002   PAD
    0x000018ac   0x000018ac   0x00000018   Code   RO          574    i.SysTick_Handler   cw32l010_systick.o
    0x000018c4   0x000018c4   0x0000006c   Code   RO         1860    i.SystemClock_Config  main.o
    0x00001930   0x00001930   0x00000010   Code   RO           13    i.SystemCoreClockUpdate  system_cw32l010.o
    0x00001940   0x00001940   0x0000003c   Code   RO           14    i.SystemInit        system_cw32l010.o
    0x0000197c   0x0000197c   0x00000002   Code   RO         1722    i.UART1_IRQHandler  interrupts_cw32l010.o
    0x0000197e   0x0000197e   0x00000002   Code   RO         1723    i.UART2_IRQHandler  interrupts_cw32l010.o
    0x00001980   0x00001980   0x00000068   Code   RO          635    i.UART_ClearFlag    cw32l010_uart.o
    0x000019e8   0x000019e8   0x00000068   Code   RO          642    i.UART_GetFlagStatus  cw32l010_uart.o
    0x00001a50   0x00001a50   0x0000032c   Code   RO          646    i.UART_Init         cw32l010_uart.o
    0x00001d7c   0x00001d7c   0x00000088   Code   RO         1922    i.UART_MspInit      uart.o
    0x00001e04   0x00001e04   0x00000048   Code   RO          650    i.UART_ReceiveData  cw32l010_uart.o
    0x00001e4c   0x00001e4c   0x00000054   Code   RO          653    i.UART_SendData_8bit  cw32l010_uart.o
    0x00001ea0   0x00001ea0   0x00000002   Code   RO         1724    i.VC1_IRQHandler    interrupts_cw32l010.o
    0x00001ea2   0x00001ea2   0x00000002   Code   RO         1725    i.VC2_IRQHandler    interrupts_cw32l010.o
    0x00001ea4   0x00001ea4   0x00000002   Code   RO         1726    i.WDT_IRQHandler    interrupts_cw32l010.o
    0x00001ea6   0x00001ea6   0x00000002   PAD
    0x00001ea8   0x00001ea8   0x00000014   Code   RO         2272    i.__0printf$bare    mc_p.l(printfb.o)
    0x00001ebc   0x00001ebc   0x0000002e   Code   RO         2583    i.__ARM_clz         mf_p.l(depilogue.o)
    0x00001eea   0x00001eea   0x00000002   PAD
    0x00001eec   0x00001eec   0x00000078   Code   RO          575    i.__NVIC_SetPriority  cw32l010_systick.o
    0x00001f64   0x00001f64   0x0000000e   Code   RO         2595    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00001f72   0x00001f72   0x00000002   Code   RO         2596    i.__scatterload_null  mc_p.l(handlers.o)
    0x00001f74   0x00001f74   0x0000000e   Code   RO         2597    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00001f82   0x00001f82   0x0000001e   Code   RO         2279    i._printf_core      mc_p.l(printfb.o)
    0x00001fa0   0x00001fa0   0x00000002   Code   RO         1861    i.assert_failed     main.o
    0x00001fa2   0x00001fa2   0x0000003e   Code   RO         2160    i.enter_light_flash  control.o
    0x00001fe0   0x00001fe0   0x00000024   Code   RO         1924    i.fputc             uart.o
    0x00002004   0x00002004   0x00000016   Code   RO         2077    i.get_data          xmodem.o
    0x0000201a   0x0000201a   0x00000002   PAD
    0x0000201c   0x0000201c   0x00000020   Code   RO         1862    i.jump              main.o
    0x0000203c   0x0000203c   0x00000002   Code   RO         2161    i.loop              control.o
    0x0000203e   0x0000203e   0x00000032   Code   RO         1863    i.main              main.o
    0x00002070   0x00002070   0x0000000e   Code   RO         2222    i.max               mymath.o
    0x0000207e   0x0000207e   0x0000000e   Code   RO         2223    i.min               mymath.o
    0x0000208c   0x0000208c   0x0000007c   Code   RO         2191    i.set_light_brightness  light.o
    0x00002108   0x00002108   0x0000000c   Code   RO         2162    i.setup             control.o
    0x00002114   0x00002114   0x0000001c   Code   RO         2078    i.uCheckSum         xmodem.o
    0x00002130   0x00002130   0x0000000c   Code   RO         2079    i.uUART_PutChar     xmodem.o
    0x0000213c   0x0000213c   0x000002f8   Code   RO         2080    i.uXMODEM_Process   xmodem.o
    0x00002434   0x00002434   0x00000058   Code   RO         1925    i.uart_receive_bytes  uart.o
    0x0000248c   0x0000248c   0x0000000c   Code   RO         2125    i.uart_send_byte    common.o
    0x00002498   0x00002498   0x00000030   Code   RO         1926    i.uart_send_bytes   uart.o
    0x000024c8   0x000024c8   0x00000040   Data   RO          127    .constdata          cw32l010_sysctrl.o
    0x00002508   0x00002508   0x00000043   Data   RO         2082    .conststring        xmodem.o
    0x0000254b   0x0000254b   0x00000001   PAD
    0x0000254c   0x0000254c   0x00000020   Data   RO         2593    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x0000256c, Size: 0x000004d0, Max: 0x00001000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000256c   0x00000004   Data   RW           15    .data               system_cw32l010.o
    0x20000004   0x00002570   0x00000009   Data   RW          576    .data               cw32l010_systick.o
    0x2000000d   0x00002579   0x00000003   PAD
    0x20000010   0x0000257c   0x00000008   Data   RW         1980    .data               time.o
    0x20000018   0x00002584   0x00000010   Data   RW         2083    .data               xmodem.o
    0x20000028   0x00002594   0x00000004   Data   RW         2569    .data               mc_p.l(stdout.o)
    0x2000002c        -       0x0000001c   Zero   RW         1927    .bss                uart.o
    0x20000048        -       0x00000284   Zero   RW         2081    .bss                xmodem.o
    0x200002cc   0x00002598   0x00000004   PAD
    0x200002d0        -       0x00000200   Zero   RW            1    STACK               startup_cw32l010.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        12          0          0          0          0        433   common.o
        76          0          0          0          0       1259   control.o
       428         92          0          0          0       3406   cw32l010_flash.o
       246         10          0          0          0      19131   cw32l010_gpio.o
      2036        482          0          0          0      15403   cw32l010_gtim.o
       920        208         64          0          0       4153   cw32l010_sysctrl.o
       290         42          0          9          0      11625   cw32l010_systick.o
      1176        218          0          0          0       9234   cw32l010_uart.o
        56         10          0          0          0        451   gpio.o
        52          0          0          0          0      10425   interrupts_cw32l010.o
       124          6          0          0          0        567   light.o
       192         24          0          0          0       5607   main.o
        28          0          0          0          0       1000   mymath.o
        40         14        192          0        512        616   startup_cw32l010.o
        76         18          0          4          0     109943   system_cw32l010.o
       588         42          0          8          0       1683   time.o
       388         34          0          0         28       3669   uart.o
       822        140         67         16        644       3566   xmodem.o

    ----------------------------------------------------------------------
      7564       1340        356         40       1188     202171   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        14          0          1          3          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
        50          8          0          0          0        144   printfb.o
         0          0          0          4          0          0   stdout.o
        44          0          0          0          0         72   uidiv.o
       356          4          0          0          0        140   dadd.o
       236          0          0          0          0        216   depilogue.o
        60         10          0          0          0         68   dfixui.o
        40          0          0          0          0         60   f2d.o
       178          0          0          0          0        108   fadd.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        40          0          0          0          0         60   ffixui.o
        14          0          0          0          0         68   ffltui.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      1660         38          0          4          0       1656   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       356         24          0          4          0        648   mc_p.l
      1300         14          0          0          0       1008   mf_p.l

    ----------------------------------------------------------------------
      1660         38          0          4          0       1656   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9224       1378        356         44       1188     199447   Grand Totals
      9224       1378        356         44       1188     199447   ELF Image Totals
      9224       1378        356         44          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 9580 (   9.36kB)
    Total RW  Size (RW Data + ZI Data)              1232 (   1.20kB)
    Total ROM Size (Code + RO Data + RW Data)       9624 (   9.40kB)

==============================================================================

